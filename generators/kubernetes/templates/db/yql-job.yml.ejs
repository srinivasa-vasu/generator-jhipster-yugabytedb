---
apiVersion: <%= KUBERNETES_CORE_API_VERSION %>
kind: ConfigMap
metadata:
  name: <%= app.baseName.toLowerCase() %>-cm
  namespace: <%= kubernetesNamespace %>
data:
<%_ if (app.prodDatabaseTypePostgres) { _%>
  ysql-init-db.sql: |
    CREATE DATABASE <%= app.baseName.toLowerCase() %>\;
    CREATE ROLE <%= app.baseName.toLowerCase() %> WITH LOGIN PASSWORD \'${<%= app.baseName.toLowerCase() %>}\'\;
    GRANT ALL PRIVILEGES ON DATABASE <%= app.baseName.toLowerCase() %> TO <%= app.baseName.toLowerCase() %>\;
<%_ } _%>
<%_ if (app.databaseTypeCassandra) { _%>
  ycql-init-db.sql: |
    CREATE KEYSPACE IF NOT EXISTS <%= app.baseName.toLowerCase() %>\;
    CREATE ROLE IF NOT EXISTS <%= app.baseName.toLowerCase() %> WITH LOGIN = true AND PASSWORD = \'${<%= app.baseName.toLowerCase() %>}\'\;
    GRANT ALL ON KEYSPACE <%= app.baseName.toLowerCase() %> TO <%= app.baseName.toLowerCase() %>\;
<%_ } _%>
---
apiVersion: <%= KUBERNETES_JOB_API_VERSION %>
kind: Job
metadata:
  name: <%= app.baseName.toLowerCase() %>-job
  namespace: <%= kubernetesNamespace %>
  labels:
    app: <%= app.baseName.toLowerCase() %>-job
spec:
  template:
    spec:
      containers:
      - name: <%= app.baseName.toLowerCase() %>-init
        image: <%= YBDB_REL_VERSION %>
        env:
        <%_ if (app.prodDatabaseTypePostgres) { _%>
        - name: YSQL_SECRET
          valueFrom:
            secretKeyRef:
              name: <%= KUBERNETES_YB_DSQL %>-vault
              key: ysql-secret
        <%_ } else if (app.databaseTypeCassandra) { _%>
        - name: YCQL_SECRET
          valueFrom:
            secretKeyRef:
              name: <%= KUBERNETES_YB_DSQL %>-vault
              key: ycql-secret
        <%_ } _%>
        - name: <%= app.baseName.toLowerCase() %>
          valueFrom:
            secretKeyRef:
              name: <%= app.baseName.toLowerCase() %>-vault
              key: yql-secret
        volumeMounts:
        - name: config
          mountPath: "/config"
          readOnly: true
        command:
          - "/sbin/tini"
          - "--"
        args:
          - "/bin/bash"
          - "-c"
          - |
              port=9042
              <%_ if (app.prodDatabaseTypePostgres) { _%>
              port=5433
              <%_ } _%>
              while true
              do
                rt=$(echo 'exit' | curl -s telnet://<%= app.baseName.toLowerCase() %>-<%= KUBERNETES_YB_DSQL_EP_SUFFIX %>:$port)
                if [ $? -eq 0 ]; then
                  echo "DB is UP"
                  break
                fi
                echo "DB is not yet reachable; sleep for a few secs before retry"
                sleep 5
              done
              # update the default creds
              <%_ if (app.prodDatabaseTypePostgres) { _%>
              echo "Updating the default YSQL password"
              /home/yugabyte/tserver/bin/ysqlsh -U yugabyte password='yugabyte' -h <%= app.baseName.toLowerCase() %>-<%= KUBERNETES_YB_DSQL_EP_SUFFIX %> -c "ALTER USER yugabyte PASSWORD '${YSQL_SECRET}';"
              <%_ } else if (app.databaseTypeCassandra) { _%>
              echo "Updating the default YCQL password"
              /home/yugabyte/tserver/bin/ycqlsh <%= app.baseName.toLowerCase() %>-<%= KUBERNETES_YB_DSQL_EP_SUFFIX %> -u cassandra -p 'cassandra' -e "ALTER ROLE cassandra WITH PASSWORD = '${YCQL_SECRET}';"
              <%_ } _%>

              if [ -f "/config/ysql-init-db.sql" ]; then
                echo "Initializing YSQL DB Objects"
                rm -f /tmp/ysql-init-db.sql; while read -r line
                do
                  eval echo "$line" >> /tmp/ysql-init-db.sql
                done < "/config/ysql-init-db.sql"
                if [ -f "/tmp/ysql-init-db.sql" ]; then
                  /home/yugabyte/tserver/bin/ysqlsh -U yugabyte password=\'${YSQL_SECRET}\' -h <%= app.baseName.toLowerCase() %>-<%= KUBERNETES_YB_DSQL_EP_SUFFIX %> -f /tmp/ysql-init-db.sql
                fi
              fi

              if [ -f "/config/ycql-init-db.sql" ]; then
                echo "Initializing YCQL DB Objects"
                rm -f /tmp/ycql-init-db.sql; while read -r line
                do
                  eval echo "$line" >> /tmp/ycql-init-db.sql
                done < "/config/ycql-init-db.sql"
                if [ -f "/tmp/ycql-init-db.sql" ]; then
                  /home/yugabyte/tserver/bin/ycqlsh <%= app.baseName.toLowerCase() %>-<%= KUBERNETES_YB_DSQL_EP_SUFFIX %> -u cassandra -p ${YCQL_SECRET} -f /tmp/ycql-init-db.sql
                fi
              fi
      restartPolicy: OnFailure
      volumes:
        - name: config
          configMap:
            name: <%= app.baseName.toLowerCase() %>-cm
  backoffLimit: 3
